package com.swasthajiwan.swasthajiwan.controller.userAuthentication;import com.swasthajiwan.swasthajiwan.dto.LoginRequest;import com.swasthajiwan.swasthajiwan.dto.LoginResponse;import com.swasthajiwan.swasthajiwan.dto.UserRequest;import com.swasthajiwan.swasthajiwan.dto.UserResponse;import com.swasthajiwan.swasthajiwan.model.User;import com.swasthajiwan.swasthajiwan.services.userAuthentication.AuthenticationServices;import io.jsonwebtoken.security.Keys;import io.jsonwebtoken.Claims;import io.jsonwebtoken.Jwts;import io.jsonwebtoken.security.Keys;import jakarta.servlet.http.HttpServletResponse;import org.springframework.web.bind.annotation.*;import java.nio.charset.StandardCharsets;import java.security.Key;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import org.springframework.security.core.Authentication;import org.springframework.security.core.context.SecurityContextHolder;import java.security.Key;import java.util.Collections;@RestController@RequestMapping("/patient/api/auth")public class AuthenticationController {    private final AuthenticationServices authService;    private final String jwtSecret = System.getProperty("JWT_SECRET", "default_secret");    public AuthenticationController(AuthenticationServices authService){        this.authService=authService;    }    @PostMapping("/register")    public ResponseEntity<User>register(@RequestBody UserRequest request){       User user=authService.createUser(request);        return ResponseEntity.ok(user);    }    @PostMapping("/login")    public ResponseEntity<LoginResponse>login(@RequestBody LoginRequest request){        LoginResponse response=authService.login(request);        if(response.getUser()!=null){            response.getUser().setPassword(null);        }        return ResponseEntity.ok(response);    }}